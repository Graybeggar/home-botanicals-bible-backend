// Declares the package this class belongs to â€” part of the model layer of your app
package com.homebotanicalsbible.homebotanicalsbiblebackend.model;

// Imports all necessary annotations from the Jakarta Persistence API for defining a JPA entity
import jakarta.persistence.*;

// Imports Lombok annotations to auto-generate boilerplate code like getters, setters, and constructors
import lombok.*;

// Marks this class as a JPA entity, meaning it maps to a table in the database
@Entity

// Lombok annotation to automatically generate all getter methods (getName())
@Getter

// Lombok annotation to automatically generate all setter methods (setName(String name))
@Setter

// Lombok annotation to generate a no-argument constructor (required by JPA)
@NoArgsConstructor

// Lombok annotation to generate a constructor with all arguments (useful for testing or manual creation)
@AllArgsConstructor
public class PlantCatalog {

    // Marks this field as the primary key of the entity (the "id" column in the table)
    @Id

    // Configures the primary key to be auto-generated by the database using the identity strategy (auto-increment)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // Represents the name of the plant
    private String name;

    // URL to an image of the plant (for display in the frontend)
    private String imageUrl;

    // A string that describes how much light the plant needs ("Low", "Bright", "Indirect")
    private String lightNeeds;

    // A string that describes how often the plant needs watering ("Weekly", "Every 2 days")
    private String wateringFreq;

    // Boolean indicating whether the plant is toxic to pets or humans (true = toxic)
    private Boolean isToxic;

    // String that indicates the typical size or growth range of the plant ("Small", "Large", "2ft-4ft")
    private String size;
}

//Notes
//@Entity - Maps the class to a database table.
//@Id, @GeneratedValue - Defines the primary key and how it's generated.
//@Getter, @Setter - Auto-generates accessor methods.
//@NoArgsConstructor, @AllArgsConstructor - Creates constructors.
//Each field - Becomes a column in the plant_catalog table.